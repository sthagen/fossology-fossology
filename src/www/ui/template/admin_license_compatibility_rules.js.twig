{# SPDX-FileCopyrightText: Â© 2024 Siemens AG

   SPDX-License-Identifier: FSFAP
#}

<script type="text/javascript">
{% import 'include/macros.html.twig' as macro %}

function showTheMessage(message) {
  $("html, body").animate({ scrollTop: 0}, "slow");
  $("#messageSpace").html(message + "<hr />").fadeIn(500).delay(5000).fadeOut(500);
}

$(document).ready(function() {
  var form = $('form#adminLicenseRulesForm');

  var t = $("#adminLicenseRulesTable").DataTable({
    "processing": true,
    "paginationType": "listbox",
    "order": [[ 0, 'asc' ]],
    "autoWidth": false,
    "columnDefs": [{
      "createdCell": function (cell) {
        $(cell).attr("style", "text-align:center");
      },
      "searchable": false,
      "targets": [0]
    },{
      "orderable": false,
      "searchable": false,
      "targets": [0,1,2,3,4,5,7]
    },{
      "orderable": false,
      "searchable": true,
      "targets": [6]
    }],
  });

  t.on('order.dt search.dt', function () {
    t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
      cell.innerHTML = i+1;
    });
  }).draw();

  t.on('draw', function () {
    form.find("input[type=checkbox],textarea,select").on("change", function(){
      if(!$(this).hasClass("newRuleInputs")) {
        $(this).addClass("inputChanged");
      }
    });
  });

  form.find("input[type=checkbox],textarea,select").on("change", function(){
    $(this).addClass("inputChanged");
  });

  form.submit(function(event) {
    var updatedFields = form.find(".inputChanged").serializeArray();
    var insertedFields = form.find(".newRuleInputs").serializeArray();
    if (updatedFields.length > 0 || insertedFields.length > 0) {
      var itemsToSend = $.merge(updatedFields, insertedFields);
      itemsToSend.push({"name": "formUpdated", "value": 1});
      $.ajax({
        url : '?mod=admin_license_compatibility_rules',
        type : 'post',
        dataType : 'json',
        data : itemsToSend,
        success : function(data) {
          var message = "";
          if (data.updated == -1) {
            message = "No rules updated";
          } else if (data.updated > 0) {
            form.find(".inputChanged").removeClass("inputChanged");
            message = "Rules updated succesfully";
          } else {
            message = data.updated;
          }
          var messageIns = [];
          if (data.inserted.status != 0) {
            if (data.inserted.status & 1) {
              form.find(".newRuleInputs").each(function(){
                if ($(this).val().trim()) {
                  $(this).removeClass("newRuleInputs");
                }
              });
              messageIns.push("Rules inserted successfully");
            }
            if (data.inserted.status & 1<<1) {
              messageIns.push("errors during insertion");
            }
            if (data.inserted.status & 1<<2) {
              messageIns.push("exceptions during insertion");
            }
          }
          showTheMessage(message + ".<br />" + messageIns.join(" with some ") + ".");
          setTimeout(location.reload.bind(location), 5_000);
        },
        error : function(data) {
          showTheMessage(data);
        }
      });
    }
    event.preventDefault();
  });

  $("#addLicRule").on('click', function(){
    let newRowNumber = t.data().length + 10001;
    t.row.add([
      newRowNumber,
      `{{ macro.select("#{firstNameParam}[]", licenseArray, firstNameParam, 0,
    'class="newRuleInputs ui-render-select2" style="width:100%"') }}`,
      `{{ macro.select("#{secondNameParam}[]", licenseArray, secondNameParam,
    0, 'class="newRuleInputs ui-render-select2" style="width:100%"') }}`,
      `{{ macro.select("#{firstTypeParam}[]", licenseTypes, firstTypeParam,
    firstTypeParam, 'class="newRuleInputs ui-render-select2" style="width:100%"') }}`,
      `{{ macro.select("#{secondTypeParam}[]", licenseTypes, secondTypeParam,
    secondTypeParam, 'class="newRuleInputs ui-render-select2" style="width:100%"') }}`,
      '<input type="checkbox" name="{{ result }}[]" value="t" id="ruleyes' +
    newRowNumber + '" class="newRuleInputs" />' +
      '<label for="ruleyes' + newRowNumber + '"> yes</label><br>' +
      '<input type="checkbox" name="{{ result }}[]" value="f" id="ruleno' +
    newRowNumber + '" class="newRuleInputs"/>' +
      '<label for="ruleno' + newRowNumber + '"> no</label><br>',
      '<textarea rows="5" cols="40" name="{{ desc }}[]" ' +
        'placeholder="Please enter rule description" required="required" ' +
        'class="newRuleInputs" style="width:100%"></textarea>',
      '<img class="delete" src="images/space_16.png" onclick="" alt="delete">'
    ]).draw(false);
    renderSelect2();
  });

  $("input:checkbox").on('click', function() {
    var $box = $(this);
    if ($box.is(":checked")) {
      var group = "input:checkbox[name='" + $box.attr("name") + "']";
      $(group).prop("checked", false);
      $box.prop("checked", true);
    } else {
      $box.prop("checked", false);
    }
  });
});

function deleteCompRule(pk) {
  $.ajax({
    type: 'POST',
    dataType: 'json',
    url: '?mod=admin_license_compatibility_rules&action=deleterule',
    data: { rule : pk },
    success: function(data) {
      if (data.status == 1) {
        showTheMessage("Rule successfully deleted");
        setTimeout(location.reload.bind(location), 5_000);
      } else {
        showTheMessage("Unable to delete");
      }
    },
    error : function(data) {
      showTheMessage("Unable to delete");
    }
  });
}
</script>
